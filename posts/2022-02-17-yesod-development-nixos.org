----
title: Yesod development environment under NixOS
modified: 2022-02-17
meta_description: 
tags: Computer, Software, Internet, Linux, NixOS, Haskell, Stack, Cabal, Functional, Yesod, HTML, CSS, JavaScript, Web
----

#+OPTIONS: ^:nil

Set up a [[https://www.yesodweb.com/][Yesod Web Framework]] development environment under [[https://www.nixos.org/][NixOS]]. Yesod is a Haskell web framework for productive development of type-safe, RESTful, high performance web applications. The Yesod [[https://www.yesodweb.com/book/scaffolding-and-the-site-template][scaffolding]] example described in this post is for a Postgres database. The set up and use of the development server that detects changes to [[https://www.haskell.org/][Haskell]] source code and [[https://www.yesodweb.com/book/shakespearean-templates][Shakespearean template]] files is also described.

(.more.)

* NixOS prerequisites
Install required and/or useful packages using the commands given below.
#+BEGIN_SRC sh
  nix-env -iA nixos.cabal-install
  nix-env -iA nixos.cabal2nix
  nix-env -iA nixos.stack
  nix-env -iA nixos.silver-searcher
#+END_SRC
* Scaffolding
[[https://www.yesodweb.com/book/scaffolding-and-the-site-template][Scaffolding]] generates a =package.yaml= file (=hpack=) that can be used with =stack= and =cabal=.

For example to generate a =yesodweb/postgres= project =projectname=, use the following command:
#+BEGIN_SRC sh
  stack new projectname yesodweb/postgres
#+END_SRC
Which generates a =Yesod= project in a =projectname= subdirectory, with a =package.yaml= file generated. If you use another name then replace =projectname= with your project's name in the rest of these instructions.

* Edit stack.yaml  
  In your project's =stack.yaml= add the following section:
#+BEGIN_SRC yaml
  # pg_config not found error when running yesod devel
  nix:
    pure: true
    enable: true
    packages: [ postgresql zlib]
#+END_SRC

Otherwise you may get problems with =zlib= and =pg_config=, e.g. like this:

  #+BEGIN_SRC sh
    Configuring postgresql-libpq-0.9.1.1...
    setup: The program 'pg_config' is required but it could not be found.
  #+END_SRC
  See: [[https://stackoverflow.com/questions/39603903/haskell-stack-does-not-build-postgresql-libpq-on-nixos][Haskell Stack does not build postgresql-libpq on Nixos]].
  
* Yesod prerequisites
  Make sure to have =~/.local/bin= at the start of your PATH variable; e.g. by putting the following to your =~/.bashrc= (or something similar):
  #+BEGIN_SRC sh
    export PATH="~/.local/bin:${PATH}"
  #+END_SRC

  Then use the stack command to install Yesod prerequisites.
  #+BEGIN_SRC sh
    stack install hpack hlint stylish-haskell yesod-bin
  #+END_SRC

* Makefile
  When creating this file, do make sure to use TAB characters in this Makefile where appropriate.
  #+BEGIN_SRC makefile
    all: help

    edit:
            @emacs &

    build:
            stack build

    clean:
            stack clean

    rebuild: clean
            stack build

    repl:
            stack repl

    # Use ~/.local/bin/yesod if make: yesod: No such file or directory is reported.
    devel:
            yesod devel

    # https://hub.docker.com/_/postgres
    database:
            docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres

    # Enter password `projectname` when prompted below; also see:
    #   config/settings.yml
    #
    # Use `su - postgres` before the following commands (to initialize), as follows:
    #   su - postgres
    #   createuser projectname --pwprompt --superuser
    #   createdb projectname
    #   createdb projectname_test
    #
    database-shell:
            xhost +LOCAL:
            docker exec -it some-postgres /bin/bash

    database-ls:
            docker ps

    lint:
            ag --haskell -l | xargs hlint -v

    formatter:
            ag --haskell -l | xargs stylish-haskell -i

    help:
            @grep '^[^ 	#:]\+:' Makefile | sed -e 's/:[^:]*//g'
  #+END_SRC

* Database creation and initialization
Follow directions in the =Makefile=: first a =make database= (which starts a Docker container with the database server) and then a =make database-shell= (which starts a shell in which the initialization commands can be executed â€” see the [[Makefile]] section for details).

Enter password =projectname= when prompted below; see the =config/settings.yml= file if you want to change the password that is used.

#+BEGIN_SRC sh
  make database
  make database-shell

  su - postgres
  createuser projectname --pwprompt --superuser
  createdb projectname
  createdb projectname_test
#+END_SRC

Exit the database shell with Ctrl-D (twice) to return to your regular command prompt.

Use a =make database-ls= command to see if a database is running and to see its id. To stop it, use a =docker stop id= command (use a =docker start id= command to start it again). To remove it, use a =docker rm id= command.

* Development server (source code change detecting)
  Because the [[https://www.yesodweb.com/book/shakespearean-templates][Shakespearean template]] files (=.hamlet=, =.julius= and =.lucius=) need to be processed when changed, a =make rebuild= should always be done before a production deployment.

During development a source code change detecting server can be used. Run =make rebuild= and =make devel= to start it. See the [[Makefile]] section. You may have to abort and retry the =make devel= if it doesn't work properly the first time(s). If that doesn't work then keep it running and execute a =make build= from a separate shell prompt.

  Refresh the site at: [[http://localhost:3000/]]

  After an initial period with it showing (in the browser) the site is being built, it should show the site and pick up changes to the Haskell source code or to Shakespearean templates.
