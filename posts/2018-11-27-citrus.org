----
title: Citrus for Rum
modified: 2018-11-27
meta_description: 
tags: Computer, Software, GUI, Functional, Clojure, ClojureScript
----

#+OPTIONS: ^:nil

Have simple [[https://github.com/Day8/re-frame][re-frame]] like state management facilities for building web
apps with [[https://github.com/tonsky/rum/][Rum]] for [[http://clojure.org/][Clojure]] and [[http://clojurescript.org/][ClojureScript]] while leveraging its API
-- [[https://github.com/roman01la/citrus][Citrus]] (by *[[https://github.com/roman01la][Roman Liutikov]]*).

(.more.)

/From its documentation:/

* Features
   :PROPERTIES:
   :CUSTOM_ID: features
   :END:

- o Decoupled application state in a single atom
- o No global state, everything lives in Reconciler instance
- o A notion of a controller to keep application domains separate
- o Reactive queries
- o Side-effects are described as data
- o Async batched updates for better performance
- o Server-side rendering with convenient state hydration

* How it works
   :PROPERTIES:
   :CUSTOM_ID: how-it-works
   :END:

With Citrus you build everything around a well known architecture
pattern in modern SPA development:

- o Model application state (with reconciler)
- o Dispatch events (with dispatch!, dispatch-sync!, broadcast! and broadcast-sync!)
- o Handle events (with :controllers functions)
- o Handle side effects (with :effect-handlers functions)
- o Query state reactively (with subscription, rum/react and rum/reactive)
- o Render (automatic & efficient ! profit +1)

* RealWorld example appl
   :PROPERTIES:
   :CUSTOM_ID: realworld-example-appl
   :END:

There is a [[https://github.com/roman01la/cljs-rum-realworld-example-app][cljs-rum-realworld-example-app]] on GitHub.
