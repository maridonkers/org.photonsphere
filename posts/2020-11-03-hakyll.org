----
title: Hakyll
modified: 2020-11-05
meta_description: 
tags: Computer, Software, Linux, Windows, Functional, Clojure, Haskell, Hakyll, Static Site Generator, HTML, CSS, Web
----

Because I have been wanting to use [[https://orgmode.org/][org-mode]] instead of [[https://en.wikipedia.org/wiki/Markdown][Markdown]] for this site, I started using the [[https://jaspervdj.be/hakyll/][Hakyll]] static site generator and converted all my content to org-mode. The [[https://blog.thjread.com/#about/][Thomas Read's blog]] (that I used as a template) even has [[https://www.mathjax.org/][MathJax]] support implemented. Support for $\LaTeX$ is also possible with [[https://jaspervdj.be/hakyll/][Hakyll]], I read online.

(.more.)

* GitHub

The source for this site is on GitHub: [[https://github.com/maridonkers/org.photonsphere][maridonkers / org.photonsphere]].

* org-mode

I had to add teaser support for [[https://orgmode.org/][org-mode]] because the =<!--more-->= that is used for Markdown is escaped by [[https://pandoc.org/][Pandoc]] in conversion from [[https://orgmode.org/][org-mode]] to [[https://en.wikipedia.org/wiki/HTML][HMTL]]. See [[https://github.com/maridonkers/org.photonsphere/blob/master/site.hs][site.hs]] on GitHub.

So =teaserFieldWithSeparator= is used instead of =teaserField=.

#+BEGIN_SRC haskell
teaserFieldWithSeparator "(.MORE.)" "teaser" "content"
#+END_SRC

/Note: The teaser separator is actually lowercase but that gets replaced.../

And I've added a function =replaceTeaserSeparator= to replace the teaser separator with the regular HTML-comment version in the output.

#+BEGIN_SRC haskell
import qualified Data.Text as T

...

>>= replaceTeaserSeparator "(.MORE.)" "<!--more-->"

...

-- | Replace teaser separator in item.
replaceTeaserSeparator :: String
                       -> String
                       -> Item String
                       -> Compiler (Item String)
replaceTeaserSeparator tsFrom tsTo item = do
    return $ fmap (replaceTeaserSeparatorWith tsFrom tsTo) item

-- | Teaser separator in HTML
replaceTeaserSeparatorWith :: String  -- ^ teaser separator to replace
                           -> String  -- ^ replacement teaser separator
                           -> String  -- ^ HTML to replace in
                           -> String  -- ^ Resulting HTML
replaceTeaserSeparatorWith tsFrom tsTo html =
    T.unpack $ T.replace tsFrom' tsTo' html'
    where tsFrom' = T.pack tsFrom
          tsTo' = T.pack tsTo
          html' = T.pack html
#+END_SRC

/Note: The teaser separator is actually lowercase but that gets replaced.../
