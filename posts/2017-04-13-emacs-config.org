----
title: My Emacs configuration
modified: 2017-04-13
meta_description: 
tags: Computer, Software, Linux, Emacs, Lisp, Emacs Lisp
----

#+OPTIONS: ^:nil

My [[https://github.com/maridonkers/emacs-config][emacs-config]], which is using [[http://orgmode.org/][org-mode]] and has been based on Arjen
Wiersma's [[https://gitlab.com/buildfunthings/emacs-config][emacs-config]], Sacha Chua's [[http://pages.sachachua.com/.emacs.d/Sacha.html][Emacs Configuration]], Daniel Mai's
[[https://github.com/danielmai/.emacs.d][Mai Emacs Configuration]] and [[https://github.com/daedreth/UncleDavesEmacs/blob/master/config.org][Uncle Dave's Emacs]] configuration.

(.more.)

* Beware
   :PROPERTIES:
   :CUSTOM_ID: beware
   :END:

Still debugging (my version, not theirs); tested only (my version)
with Emacs 25.{1,2} under Linux.

* Usage
   :PROPERTIES:
   :CUSTOM_ID: usage
   :END:

- o rename your existing ~/.emacs.d directory as a backup;
- o check that there's no ~/.emacs file (rename it if there is);
- o git clone https://github.com/maridonkers/emacs-config.git ~/.emacs.d

Start Emacs and wait until packages are all retrieved and installed.

* Emacs daemon
   :PROPERTIES:
   :CUSTOM_ID: emacs-daemon
   :END:

Setting up an Emacs daemon makes it start almost instantaneously!
Under Linux the start/stop can be done via systemd, as follows:

In file: /~/.config/systemd/user/emacs.service/

#+BEGIN_SRC ini
      # Usage: systemctl --user {enable,disable,start,restart,stop} emacs.service
      #
      
      [Unit]
      Description=Emacs: the extensible, self-documenting text editor
      
      [Service]
      Type=forking
      ExecStart=/usr/bin/emacs --daemon
      ExecStop=/usr/bin/emacsclient --eval "(progn (setq kill-emacs-hook 'nil) (kill-emacs))"
      Restart=always
      
      # Remove the limit in startup timeout, since emacs
      # cloning and building all packages can take time
      TimeoutStartSec=0
      
      [Install]
      WantedBy=default.target
#+END_SRC

* Reload systemd user configuration
   :PROPERTIES:
   :CUSTOM_ID: reload-systemd-user-configuration
   :END:

#+BEGIN_SRC sh
      systemctl daemon-reload --user
#+END_SRC

* Make your PATH known to systemd
   :PROPERTIES:
   :CUSTOM_ID: make-your-path-known-to-systemd
   :END:

If you customize your PATH and plan on launching applications that
make use of it from systemd units, you should make sure the modified
PATH is set on the systemd environment. The best way to make systemd
aware of your modified PATH is by adding the following after the PATH
variable is set:

#+BEGIN_SRC sh
      systemctl --user import-environment PATH
#+END_SRC

* Start, restart, stop Emacs daemon
   :PROPERTIES:
   :CUSTOM_ID: start-restart-stop-emacs-daemon
   :END:

Use respectively:

#+BEGIN_SRC sh
      systemctl --user start emacs.service
      
      systemctl --user restart emacs.service
      
      systemctl --user stop emacs.service
#+END_SRC

* Automatically start Emacs daemon at login
   :PROPERTIES:
   :CUSTOM_ID: automatically-start-emacs-daemon-at-login
   :END:

#+BEGIN_SRC sh
      systemctl --user enable emacs.service
#+END_SRC

* Start Emacs as client
   :PROPERTIES:
   :CUSTOM_ID: start-emacs-as-client
   :END:

Now the Emacs daemon is running you can start an Emacs client, e.g.Â as
follows:

#+BEGIN_SRC sh
      emacsclient -nc
#+END_SRC

(with optional filename(s) as additional parameters).

BTW: You can skip all the =systemd= configuration and just start =emacsclient= as follows:

#+BEGIN_SRC sh
emacsclient -nc -a "" 
#+END_SRC
