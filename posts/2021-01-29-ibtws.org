----
title: Interactive Brokers' Trader Workstation (TWS) container with GUI
modified: 2021-01-29
meta_description: 
tags: Computer, Software, Linux, Server, Client, GUI, Docker, Financial, Trading, Broker, IBTWS
----

Create an Interactive Brokers' [[https://www.interactivebrokers.com/en/index.php?f=14099][Trader Workstation]] platform [[https://www.docker.com/][Docker]]
image that uses your computer's native GUI. This can be useful when
your operating system is not supported by Trader Workstation or no
recent version is available.

(.more.)

The docker image is based on [[https://github.com/alekna/docker-ib-tws][alekna/docker-ib-tws]] Docker image (by
[[https://github.com/alekna][Laurynas Alekna]]), but this derived version displays the GUI directly
on your host computer. Which is a lot snappier and more robust. It is
also based on
https://tpaschalis.github.io/sandboxed-browser-with-docker for the
Chromium sandbox from a container and sound problems (?) fix.

(.more.)
On the Docker host computer, do not forget to use =xhost= to allow access to the X-server, as follows.
#+BEGIN_SRC sh
xhost +LOCAL:
#+END_SRC
See the Makefile for the commands to build and start the container.

The below project is on github: [[https://github.com/maridonkers/ib-tws-docker][maridonkers/ib-tws-docker]]. I use it under NixOS to run the latest IB TWS.

* Disclaimer
Read the Interactive Brokers' [[https://www.interactivebrokers.com/en/index.php?f=297][Warnings and Disclosures]] information. Also beware: this method of deploying IB TWS via a Docker container. is not endorsed nor supported by IB. Caveat emptor.

* Define the image via a Dockerfile
   :PROPERTIES:
   :CUSTOM_ID: define-the-image-via-a-dockerfile
   :END:

The =Dockerfile=:

#+BEGIN_SRC dockerfile
# Interactive Brokers' Trader Workstation (TWS) container with GUI
# displaying on the Docker host's X-server.
#
# This is based on alekna/ib-tws Interactive Brokers' Trader
# Workstation (TWS) docker container, which uses VNC to access the
# GUI. It is also based on https://tpaschalis.github.io/sandboxed-browser-with-docker
# for the Chromium sandbox from a container and sound problems (?) fix.
#

FROM debian:buster

# Timezone is also in docker-compose file.
ENV HOME /root
ENV TZ Europe/Amsterdam
ENV SHELL /bin/bash

# Install basic Desktop environment for ibtws.
RUN apt-get update; \
    apt-get upgrade -y; \
    apt-get install -y procps sudo curl less vim-nox zip openbox tint2 pcmanfm xfce4-terminal; \
    apt-get clean

# A web browser is required IB TWS to e.g. display help.
#
# Configure browser in IB TWS settings, as follows:
#   /usr/bin/chromium
#
RUN apt-get update; \
    apt-get install -y chromium \
      chromium-l10n \
      fonts-liberation \
      fonts-roboto \
      hicolor-icon-theme \
      libcanberra-gtk-module \
      libexif-dev \
      libgl1-mesa-dri \
      libgl1-mesa-glx \
      libpango1.0-0 \
      libv4l-0 \
      fonts-symbola \
      --no-install-recommends; \
    rm -rf /var/lib/apt/lists/*; \
    mkdir -p /etc/chromium.d/; \
    apt-get clean

# Create a non-root account to run IB TWS with.
RUN useradd -ms /bin/bash --uid 1000 --gid 100 tws; \
    usermod -G audio,video tws; 

# RUN echo "tws ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

USER tws
WORKDIR /home/tws
ENV HOME /home/tws

RUN mkdir -p /home/tws/Downloads; \
    mkdir -p /home/tws/Desktop

# Retrieve and install IB TWS (and its embedded JRE).
# curl -sO https://download2.interactivebrokers.com/installers/tws/latest/tws-latest-linux-x64.sh; \
RUN cd /home/tws ; \
    curl -sO https://download2.interactivebrokers.com/installers/tws/stable/tws-stable-linux-x64.sh; \
    echo "/home/tws/Jts" | sh ./tws-stable-linux-x64.sh; \
    rm ./tws-stable-linux-x64.sh

# The DISPLAY variable is required to display ibtws on your desktop.
ENV PS1='$ '
ENV DISPLAY=":0"

# Start the installed Interactive Brokers TWS. Its GUI will display on
# the computer that is hosting the Docker container. Be sure to allow
# access to its X-server via the following command:
#   xhost +LOCAL:
#
#ENTRYPOINT ["/bin/bash"]
ENTRYPOINT ["Jts/tws"]
#+END_SRC

* The Docker compose file
   :PROPERTIES:
   :CUSTOM_ID: the-docker-compose-file
   :END:

#+BEGIN_SRC dockerfile
version: "2.0"
services:
  "tws":
    image: ib-tws
    build: .
    stdin_open: true
    tty: true
    privileged: true
    security_opt:
      - seccomp:"./chrome.json"
    devices:
      - "/dev/snd/:/dev/snd/"
    ipc: host
    environment:
      - TZ=Europe/Amsterdam
    network_mode: host
    volumes:
      - tws:/home/tws:rw
      - "/tmp/.X11-unix/:/tmp/.X11-unix/:ro"
      - "~/.Xauthority:/home/tws/.Xauthority:rw"
      - "/etc/asound.conf:/etc/asound.conf"

volumes:
  tws:
#+END_SRC

* Build and run.
   :PROPERTIES:
   :CUSTOM_ID: compose-up
   :END:

Use the make to build the Docker container and bring them up. The =Makefile= is shown below. Initially use =make build= to create and run the docker container. In subsequent sessions simply use =make= to run it. To bring it down completely use =make down=.

#+BEGIN_SRC makefile
# Brings up the Docker container, which automatically starts IB TWS.
# The attach can be used to connect to the command prompt in the
# container, where e.g. a Ctrl-c can be used to force a stop.
#
all: up 

up:
	xhost +LOCAL:
	docker-compose up -d

down:
	docker-compose down

ls:
	docker ps -a

# Get custom seccomp profile (the wget) for Chromium sound.
build:
	wget https://raw.githubusercontent.com/jfrazelle/dotfiles/master/etc/docker/seccomp/chrome.json -O ./chrome.json
	xhost +LOCAL:
	docker-compose up -d --build

attach:
	xhost +LOCAL:
	docker attach ib_tws_1

shell:
	xhost +LOCAL:
	docker exec -it ib_tws_1 /bin/bash
#+END_SRC

* IB TWS running

If it fails then check Interactive Brokers' [[https://www.interactivebrokers.com/en/index.php?f=2225][server status]] page to see if there's e.g. any scheduled maintenace.

First time run:

#+BEGIN_SRC sh
make build
#+END_SRC

After a lot of downloading and building the Docker container is ready and executes. Subsequent runs use the then already built container and will therefore be much faster.

Subsequent runs:

#+BEGIN_SRC sh
make
#+END_SRC

[[../images/ib-tws.png]]
